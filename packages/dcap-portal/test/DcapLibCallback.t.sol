// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import "forge-std/Test.sol";
import "../src/lib/DcapLibCallback.sol";
import "../src/lib/Output.sol";

contract DcapLibCallbackTest is DcapLibCallback, Test {
    function test_sgx_output_deserializaton() public pure {
        bytes memory outputData = hex"0003000000000400606a0000000c0c100fffff0100000000000000000000000000000000000000000000000000000000000000000000000000000000000500000000000000e700000000000000a4f45c39dac622cb1dd32ddb35a52ec92db41d0fa88a1c911c49e59c534f61cd00000000000000000000000000000000000000000000000000000000000000001bda23eb3a807dfe735ddcebbfa2eac05e04a00df2804296612f770b594180ba

        Output memory expectedOutput = Output({
            quoteVersion: 3,
            tee: 0x00000000,
            tcbStatus: TCBStatus.TCB_OUT_OF_DATE,
            fmspcBytes: 0x00606A000000,
            quoteBody: hex"0c0c100fffff0100000000000000000000000000000000000000000000000000000000000000000000000000000000000500000000000000e700000000000000a4f45c39dac622cb1dd32ddb35a52ec92db41d0fa88a1c911c49e59c534f61cd00000000000000000000000000000000000000000000000000000000000000001bda23eb3a807dfe735ddcebbfa2eac05e04a00df2804296612f770b594180ba0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
            advisoryIDs: new string[](0)
        });

        Output memory output = _deserializeAttestationOutput(outputData);

        assertEq(output.quoteVersion, expectedOutput.quoteVersion);
        assertEq(output.tee, expectedOutput.tee);
        assertEq(uint8(output.tcbStatus), uint8(expectedOutput.tcbStatus));
        assertEq(output.fmspcBytes, expectedOutput.fmspcBytes);
        assertEq(output.quoteBody, expectedOutput.quoteBody);
        for (uint256 i = 0; i < output.advisoryIDs.length; i++) {
            assertEq(output.advisoryIDs[i], expectedOutput.advisoryIDs[i]);
        }
    }

    function test_tdx_output_deserializaton() public pure {
        bytes memory outputData = hex"0004000000810400806f05000004010700000000000000000000000000ffc97a88587660fb04e1f7c851300c96ae0b5a463ac46d035d16c2d9f36d0ed1d23775bcbd27deb219e3a3cc2802389500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000e700060000000000935be7742dd89c6a4df6dba8353d89041ae0f052beef993b1e7f4524d3bc57650df20e5582158352e1240b3f1fed55da000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000e494e54454c2d53412d3030393630000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e494e54454c2d53412d3030393832000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e494e54454c2d53412d3030393836000000000000000000000000000000000000";

        string[] memory expectedAdvisoryIds = new string[](3);
        expectedAdvisoryIds[0] = "INTEL-SA-00960";
        expectedAdvisoryIds[1] = "INTEL-SA-00982";
        expectedAdvisoryIds[2] = "INTEL-SA-00986";

        Output memory expectedOutput = Output({
            quoteVersion: 4,
            tee: 0x00000081,
            tcbStatus: TCBStatus.TCB_OUT_OF_DATE,
            fmspcBytes: 0x00806f050000,
            quoteBody: hex"04010700000000000000000000000000ffc97a88587660fb04e1f7c851300c96ae0b5a463ac46d035d16c2d9f36d0ed1d23775bcbd27deb219e3a3cc2802389500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000e700060000000000935be7742dd89c6a4df6dba8353d89041ae0f052beef993b1e7f4524d3bc57650df20e5582158352e1240b3f1fed55d
            advisoryIDs: expectedAdvisoryIds
        });

        Output memory output = _deserializeAttestationOutput(outputData);

        assertEq(output.quoteVersion, expectedOutput.quoteVersion);
        assertEq(output.tee, expectedOutput.tee);
        assertEq(uint8(output.tcbStatus), uint8(expectedOutput.tcbStatus));
        assertEq(output.fmspcBytes, expectedOutput.fmspcBytes);
        assertEq(output.quoteBody, expectedOutput.quoteBody);
        for (uint256 i = 0; i < output.advisoryIDs.length; i++) {
            assertEq(output.advisoryIDs[i], expectedOutput.advisoryIDs[i]);
        }
    }
}